#r "nuget:NaCl.Core/1.*"
using NaCl.Core;
// Crypto docs: https://github.com/idaviddesmet/NaCl.Core

byte[] key = { 0x87, 0x20, 0xe8, 0x62, 0x76, 0x29, 0xc2, 0x85, 0x85, 0x02, 0x30, 0xfe, 0xfa, 0x32, 0x36, 0x57,
               0x28, 0x97, 0x32, 0xcb, 0x9f, 0x00, 0xa6, 0x79, 0xd5, 0x20, 0x61, 0x60, 0x45, 0x4d, 0x84, 0xd0 }; 
byte[] iv = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
var cipher = new ChaCha20Poly1305(key);

string ByteArrayToString(byte[] bytes)
{
  var sb = new StringBuilder();
  for (int i = 0; i < bytes.Length; i++)
    sb.Append($"0x{bytes[i].ToString("x2")}, ");
  return sb.ToString();
}

string EncodeString(string plainText)
{
    var polyData = cipher.Encrypt(Encoding.ASCII.GetBytes(plainText), null, iv).ToList();
    var data = polyData.GetRange(0, polyData.Count - 16);
    var dataStr = ByteArrayToString(data.ToArray());
    return dataStr;
}

//var plainText = "\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0";
//var plainText = "The white cat walked slowly and quitely past the noisy black dog";   // 64 chars
/*
var plainText = "\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0" +
                "\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0" +
                "\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0" +
                "\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0" +
                "\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0" +
                "\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0";
*/
var plainText = "A stream cipher is a symmetric key cipher where plaintext digits are combined with a pseudorandom cipher digit stream (keystream)." +
                " In a stream cipher, each plaintext digit is encrypted one at a time with the corresponding digit of the keystream, to give a digit of the ciphertext stream.";    // 287 chars

var dataStr = EncodeString(plainText);
Console.WriteLine(dataStr);
