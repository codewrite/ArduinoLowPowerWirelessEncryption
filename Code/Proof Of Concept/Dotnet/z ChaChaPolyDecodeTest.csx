using System.Text;
using System.Linq;

/*
byte[] cipherBlank = { 0x6e, 0x8e, 0xd6, 0xae, 0x58, 0x86, 0xd3, 0xf6,
                       0x83, 0xf2, 0x23, 0x44, 0x57, 0x08, 0x71, 0x91,
                       0xc5, 0xe1, 0x37, 0xeb, 0x86, 0x00, 0xbe, 0xe7,
                       0xc7, 0x8f, 0x1a, 0x82, 0x07, 0x1e, 0x8c, 0xa7,
                       0xca, 0x91, 0x15, 0x68, 0x0a, 0xb8, 0xc4, 0x5b,
                       0x47, 0xd7, 0x0c, 0x9a, 0xf7, 0x28, 0x2b, 0x42,
                       0xb4, 0x88, 0x9a, 0x4c, 0x35, 0xce, 0x68, 0x18,
                       0x50, 0xd3, 0x05, 0xbe, 0xe8, 0x26, 0x5f, 0x42 };

byte[] cipherStr1 = { 0x3a, 0xe6, 0xb3, 0x8e, 0x2f, 0xee, 0xba, 0x82,
                      0xe6, 0xd2, 0x40, 0x25, 0x23, 0x28, 0x06, 0xf0,
                      0xa9, 0x8a, 0x52, 0x8f, 0xa6, 0x73, 0xd2, 0x88,
                      0xb0, 0xe3, 0x63, 0xa2, 0x66, 0x70, 0xe8, 0x87,
                      0xbb, 0xe4, 0x7c, 0x1c, 0x6f, 0xd4, 0xbd, 0x7b,
                      0x37, 0xb6, 0x7f, 0xee, 0xd7, 0x5c, 0x43, 0x27,
                      0x94, 0xe6, 0xf5, 0x25, 0x46, 0xb7, 0x48, 0x7a,
                      0x3c, 0xb2, 0x66, 0xd5, 0xc8, 0x42, 0x30, 0x25 };
*/

byte[] cipherBlank = { 0x6e, 0x8e, 0xd6, 0xae, 0x58, 0x86, 0xd3, 0xf6, 0x83, 0xf2, 0x23, 0x44, 0x57, 0x08, 0x71, 0x91,
                       0xc5, 0xe1, 0x37, 0xeb, 0x86, 0x00, 0xbe, 0xe7, 0xc7, 0x8f, 0x1a, 0x82, 0x07, 0x1e, 0x8c, 0xa7,
                       0xca, 0x91, 0x15, 0x68, 0x0a, 0xb8, 0xc4, 0x5b, 0x47, 0xd7, 0x0c, 0x9a, 0xf7, 0x28, 0x2b, 0x42,
                       0xb4, 0x88, 0x9a, 0x4c, 0x35, 0xce, 0x68, 0x18, 0x50, 0xd3, 0x05, 0xbe, 0xe8, 0x26, 0x5f, 0x42,
                       0xf3, 0x35, 0x5e, 0x8f, 0x29, 0x5d, 0xac, 0x37, 0xa0, 0x31, 0x8f, 0xca, 0xc3, 0xe6, 0x75, 0x54,
                       0xeb, 0xe0, 0x71, 0xcc, 0xc9, 0xfc, 0x74, 0x6b, 0x7f, 0xd6, 0xef, 0xab, 0x84, 0x59, 0xb5, 0x58,
                       0xb6, 0x34, 0x21, 0x0f, 0xac, 0x9f, 0xd7, 0x5f, 0x16, 0x75, 0x2d, 0xbb, 0x1e, 0x03, 0x1c, 0x80,
                       0x46, 0x3a, 0x2b, 0x21, 0xb3, 0x64, 0xc5, 0x2c, 0x20, 0x19, 0x55, 0xde, 0x49, 0x3c, 0xd6, 0x09,
                       0x61, 0x07, 0x5a, 0x50, 0xb5, 0xbf, 0xcf, 0x9e, 0xfd, 0x94, 0x7f, 0x2b, 0x36, 0x9a, 0xef, 0xd9,
                       0x6f, 0xdd, 0x40, 0xf6, 0x9c, 0x72, 0x37, 0x25, 0xb6, 0x55, 0x89, 0x9d, 0xbb, 0x75, 0x4d, 0x04,
                       0x3a, 0xb3, 0xd7, 0xc1, 0x1d, 0x6c, 0xa0, 0x2a, 0xf6, 0x35, 0x7c, 0xed, 0x14, 0x68, 0x37, 0x99,
                       0xb8, 0x17, 0x68, 0x4c, 0x10, 0x18, 0xa5, 0x3b, 0xb6, 0x24, 0x05, 0x94, 0xb0, 0x31, 0x14, 0x02,
                       0xd2, 0x14, 0x72, 0x1d, 0xc4, 0x90, 0x14, 0x35, 0xb3, 0xd4, 0xb7, 0x16, 0x97, 0x11, 0x1c, 0x4d,
                       0xae, 0x5a, 0xb7, 0xf6, 0x9b, 0xa5, 0x3b, 0xeb, 0xc5, 0x51, 0xe2, 0x38, 0xd5, 0xd0, 0xce, 0xa5,
                       0x13, 0xc3, 0x0a, 0xe9, 0xe2, 0x67, 0x74, 0xdf, 0x76, 0x03, 0xfd, 0xb8, 0xda, 0xd2, 0xd7, 0xdf,
                       0x32, 0x65, 0xe8, 0x5b, 0x4c, 0x7e, 0x82, 0xff, 0xba, 0x0e, 0x8f, 0x9d, 0xb7, 0xd2, 0x12, 0xeb,
                       0xd8, 0x6b, 0x52, 0xd2, 0xa6, 0x3d, 0xed, 0x40, 0xdd, 0x10, 0x62, 0x8c, 0x49, 0xe7, 0x84, 0x9e,
                       0x55, 0x4f, 0x2f, 0x7c, 0xa4, 0xfa, 0xc5, 0xdf, 0x12, 0x6e, 0x24, 0xb5, 0x73, 0x06, 0x4b  };

byte[] cipherStr1 = { 0x2f, 0xae, 0xa5, 0xda, 0x2a, 0xe3, 0xb2, 0x9b, 0xa3, 0x91, 0x4a, 0x34, 0x3f, 0x6d, 0x03, 0xb1,
                      0xac, 0x92, 0x17, 0x8a, 0xa6, 0x73, 0xc7, 0x8a, 0xaa, 0xea, 0x6e, 0xf0, 0x6e, 0x7d, 0xac, 0xcc,
                      0xaf, 0xe8, 0x35, 0x0b, 0x63, 0xc8, 0xac, 0x3e, 0x35, 0xf7, 0x7b, 0xf2, 0x92, 0x5a, 0x4e, 0x62,
                      0xc4, 0xe4, 0xfb, 0x25, 0x5b, 0xba, 0x0d, 0x60, 0x24, 0xf3, 0x61, 0xd7, 0x8f, 0x4f, 0x2b, 0x31,
                      0xd3, 0x54, 0x2c, 0xea, 0x09, 0x3e, 0xc3, 0x5a, 0xc2, 0x58, 0xe1, 0xaf, 0xa7, 0xc6, 0x02, 0x3d,
                      0x9f, 0x88, 0x51, 0xad, 0xe9, 0x8c, 0x07, 0x0e, 0x0a, 0xb2, 0x80, 0xd9, 0xe5, 0x37, 0xd1, 0x37,
                      0xdb, 0x14, 0x42, 0x66, 0xdc, 0xf7, 0xb2, 0x2d, 0x36, 0x11, 0x44, 0xdc, 0x77, 0x77, 0x3c, 0xf3,
                      0x32, 0x48, 0x4e, 0x40, 0xde, 0x44, 0xed, 0x47, 0x45, 0x60, 0x26, 0xaa, 0x3b, 0x59, 0xb7, 0x64,
                      0x48, 0x29, 0x7a, 0x19, 0xdb, 0x9f, 0xae, 0xbe, 0x8e, 0xe0, 0x0d, 0x4e, 0x57, 0xf7, 0xcf, 0xba,
                      0x06, 0xad, 0x28, 0x93, 0xee, 0x5e, 0x17, 0x40, 0xd7, 0x36, 0xe1, 0xbd, 0xcb, 0x19, 0x2c, 0x6d,
                      0x54, 0xc7, 0xb2, 0xb9, 0x69, 0x4c, 0xc4, 0x43, 0x91, 0x5c, 0x08, 0xcd, 0x7d, 0x1b, 0x17, 0xfc,
                      0xd6, 0x74, 0x1a, 0x35, 0x60, 0x6c, 0xc0, 0x5f, 0x96, 0x4b, 0x6b, 0xf1, 0x90, 0x50, 0x60, 0x22,
                      0xb3, 0x34, 0x06, 0x74, 0xa9, 0xf5, 0x34, 0x42, 0xda, 0xa0, 0xdf, 0x36, 0xe3, 0x79, 0x79, 0x6d,
                      0xcd, 0x35, 0xc5, 0x84, 0xfe, 0xd6, 0x4b, 0x84, 0xab, 0x35, 0x8b, 0x56, 0xb2, 0xf0, 0xaa, 0xcc,
                      0x74, 0xaa, 0x7e, 0xc9, 0x8d, 0x01, 0x54, 0xab, 0x1e, 0x66, 0xdd, 0xd3, 0xbf, 0xab, 0xa4, 0xab,
                      0x40, 0x00, 0x89, 0x36, 0x60, 0x5e, 0xf6, 0x90, 0x9a, 0x69, 0xe6, 0xeb, 0xd2, 0xf2, 0x73, 0xcb,
                      0xbc, 0x02, 0x35, 0xbb, 0xd2, 0x1d, 0x82, 0x26, 0xfd, 0x64, 0x0a, 0xe9, 0x69, 0x84, 0xed, 0xee,
                      0x3d, 0x2a, 0x5d, 0x08, 0xc1, 0x82, 0xb1, 0xff, 0x61, 0x1a, 0x56, 0xd0, 0x12, 0x6b, 0x65  };

var newCipher = new List<byte>();

for (int i = 0; i < cipherStr1.Length; i++)
{
    newCipher.Add((byte)(cipherBlank[i] ^ cipherStr1[i]));     
}

Encoding.ASCII.GetString(newCipher.ToArray()).Dump();
